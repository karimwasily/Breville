/* _flexbox.scss */
@import 'mixin-utils/themer';

/* flex container placeholder */
%flex-box-default {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: flex-start;
  align-content: flex-start;
}

@mixin flex-col {
  flex-direction: column;
}

@mixin flex-col-reverse {
  flex-direction: column-reverse;
}

/* flex container rules */
.display-flex,
.flex,
.flex-box,
.flex-row,
.flex-start {
  @extend %flex-box-default;
}

.flex-col,
.flex-column {
  @extend %flex-box-default;
  flex-direction: column;
}

.flex-center {
  @extend %flex-box-default;
  justify-content: center;
  align-items: center;
}

.flex-justify-center {
  @extend %flex-box-default;
  justify-content: center;
}

.flex-align-center {
  @extend %flex-box-default;
  align-items: center;
}

.flex-end {
  @extend %flex-box-default;
  justify-content: flex-end;
  align-items: flex-end;
}

.flex-space-between {
  @extend %flex-box-default;
  justify-content: space-between;
}

.flex-space-around {
  @extend %flex-box-default;
  justify-content: space-around;
}

.flex-space-evenly {
  @extend %flex-box-default;
  justify-content: space-evenly;
}

.flex-stretch {
  @extend %flex-box-default;
  align-items: stretch;
}

.flex-baseline {
  @extend %flex-box-default;
  align-items: baseline;
}

/* generated class names */
$flex-direction: (row row-reverse column column-reverse);
@include themer(flex-direction, $flex-direction);

$flex-wrap: (nowrap wrap wrap-reverse);
@include themer(flex-wrap, $flex-wrap);

$justify-content: (flex-start flex-end center space-between space-around space-evenly);
@include themer(justify-content, $justify-content);

$align-items: (flex-start flex-end center baseline stretch);
@include themer(align-items, $align-items);

$align-content: (flex-start flex-end center space-between space-around space-evenly stretch);
@include themer(align-content, $align-content);

$align-self: (flex-start flex-end center baseline stretch auto);
@include themer(align-self, $align-self);

/* flex item rules */

/* flex item placeholders */

%flex-item-default {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 0;
}
%flex-item-initial {
  flex: initial;
  // same as:
  // flex-grow: 0;
  // flex-shrink: 1;
  // flex-basis: auto;
}
%flex-item-auto {
  flex: auto;
  // same as:
  // flex-grow: 1;
  // flex-shrink: 1;
  // flex-basis: auto;
}
%flex-item-none {
  flex: none;
  // same as:
  // flex-grow: 0;
  // flex-shrink: 0;
  // flex-basis: auto;
}

/* flex item lists */
$flex-grow: (0 99);
$flex-shrink: (0 99);
$flex-basis: (1 12 auto);

// TODO: create "order" rules.

/* flex item rules */
.flex-item {
  @extend %flex-item-default;
  order: 0; /* default */
}

.flex-fixed {
  @extend %flex-item-initial;
  order: 0; /* default */
}

.flex-auto {
  @extend %flex-item-auto;
  order: 0; /* default */
}

.flex-none {
  @extend %flex-item-none;
  order: 0; /* default */
}

// TODO: create mixins for flex-grow, -shrink, -basis.

.flex-0 {
  flex-grow: 0;
}

.flex-1 {
  flex-grow: 1;
}

.flex-2 {
  flex-grow: 2;
}

.flex-3 {
  flex-grow: 3;
}

.flex-4 {
  flex-grow: 4;
}

.flex-100 {
  flex: 1 1 100%;
}

.flex-90 {
  flex: 1 1 90%;
}

.flex-80 {
  flex: 1 1 80%;
}

.flex-75 {
  flex: 1 1 75%;
}

.flex-70 {
  flex: 1 1 70%;
}

.flex-66 {
  flex: 1 1 66.6666666666666%;
}

.flex-60 {
  flex: 1 1 60%;
}

.flex-50 {
  flex: 1 1 50%;
}

.flex-40 {
  flex: 1 1 40%;
}

.flex-33 {
  flex: 1 1 33.3333333333333%;
}

.flex-30 {
  flex: 1 1 30%;
}

.flex-25 {
  flex: 1 1 25%;
}

.flex-20 {
  flex: 1 1 20%;
}

.flex-10 {
  flex: 1 1 10%;
}

.inline-flex {
  display: inline-flex;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-no-wrap {
  flex-wrap: nowrap;
}
